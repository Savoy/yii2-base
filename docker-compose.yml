version: '3.3'
services:
  web:
    image: nginx:latest
    container_name: ${COMPOSE_PROJECT_NAME}-web
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/web/conf:/etc/nginx/conf.d
      - ./docker/web/logs:/var/log/nginx/
      # Mount source-code for development
      - ./:/app
    links:
      - app

  app:
    image: yiisoftware/yii2-php:7.4-fpm
    container_name: ${COMPOSE_PROJECT_NAME}-app
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    environment:
      - YII_DEBUG=true
      - YII_ENV=dev
    expose:
      - 9000
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:5.7
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    volumes:
      - ./docker/mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/data/mysql:/var/lib/mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    ports:
      - 8080:80
    links:
      - mysql:mysql
    environment:
      PMA_HOST: mysql
    volumes:
      - ./docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    depends_on:
      - mysql

  redis:
    image: redis:3.2
    container_name: ${COMPOSE_PROJECT_NAME}-redis
